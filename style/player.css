* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

canvas
{
    display: none;
}

body {
    /* 100%窗口高度 */
    height: 100vh;
    /* 弹性布局 居中显示 */
    display: flex;
    justify-content: center;
}

.main {
    height: 100vh;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    border: 3px solid red;
}


.bg {
    position: fixed;
    top: -40px;
    right: -40px;
    bottom: -40px;
    left: -40px;
    background: no-repeat;
    background-size: cover;
    background-position: center;
    /* 模糊滤镜 */
    filter: blur(40px);
    z-index: 1;
}

.container {
    z-index: 2;
}

.song-words{
    height: 75vh;
    border: 10px solid rgba(255, 255, 255, 0.3);
    overflow-y: auto;
    scroll-behavior: smooth;
}

.line{
    width: 100%;
    height: 40px;
    line-height: 40px;
    text-align: center;
    font-size: 20px;
    color: #fff;
    transition: all 0.3s ease;
    opacity: 0.7;
}

.line.active{
    color: #ff668f;
    font-size: 25px;
    font-weight: bold;
    opacity: 1;
}

.player {
    position: relative;
    z-index: 2;
    width: 60vw;
    height: 13vh;
    margin-top: 12vh;
}

.player-content {
    display: flex;
    flex-direction: row;
    background-color: #a09393;
    border-radius: 2vw 2vw 2vw 2vw;
    width: 100%;
    height: 100%;
    gap: 15%
}

.hover-section {
    position: absolute;
    left: 25%;
    top: 1%;
    width: 70%;
    height: 12vh;
    background-color: rgba(187, 186, 186, 0.8);
    border-radius: 15px 15px 0 0;
    /* 改变top时的过渡效果 */
    transition: all 0.5s ease;
    z-index: -1;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.hover-section.active {
    /* 上移 */
    top: -90%;
}

.song-name {

    color: #333;
    font-size: 30px;
    font-weight: bold;
}

.soner {
    color: #888;
    font-size: 13px;
    margin-top: 1%;
}

.time {
    width: 30vw;
    height: 20vh;
    line-height: 12px;
    margin-bottom: 4px;
}

.now,
.end {
    margin-top: 2%;
    color: #ff668f;
    font-size: 18px;
    transition: 0.3s ease;
}

.now {
    float: left;
}

.end {
    float: right;
}

.progress {
    width: 57%;
    height: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    gap: 0;
    position: relative;
}

.total-bar {
    position: relative;
    margin-top: 5px;
    margin-left: 10px;
    margin-right: 10px;
    width: 300px;
    height: 4px;
    background-color: #ead2d7;
    border-radius: 4px;
    cursor: pointer;
}

.progress-bar {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: #fd6d94;
    border-radius: 4px;
    z-index: 1;
    width: 0%;  
    /* 改变width时的过渡效果 */
    transition: width 0.2s ease;
}

.time-box{
    position: absolute;
    top: -25px;
    right: 0;
    bottom: 0;
    left: 0;
    width: 50px;
    height: 20px;
    background-color: rgba(0, 0, 0, 0.7);
    color: #fff;
    font-size: 12px;
    text-align: center;
    line-height: 20px;
    border-radius: 10px;
    display: none;
    transition: 0s;
}

.time-box.active {
    display: block; 
}

.play-controls {
    display: flex;
    align-items: center;
    flex-direction: row;
    position: relative;
    justify-content: center;
    gap: 15vw;
}

.control {
    margin-top: 1vh;
    scale: 250%;
    transition: color 0.3s ease;
}

.cover {
    scale: 230%;
    border-radius: 50%;
    margin-bottom: 7vh;
    margin-left: 4.5vw;
    border: 3px solid rgb(255, 255, 255);
    overflow: hidden;
    transition: 0.3s ease;
}

.cover::before {
    content: "";
    width: 0.5vw;
    height: 1vh;
    background-color: #2e2e2e;
    position: absolute;
    top: 65%;
    right: 0;
    bottom: 0;
    left: 0;
    border-radius: 50%;
    margin: -10px auto auto auto;
    box-shadow: inset 0 0 0 2px #ffffff;
    z-index: 1;
}

.cover.active{
    box-shadow: 1px 2px 4px 1px #000000;
    transform: translateY(-10px);
}

.control:hover {
    color: #ff668f;
    cursor: pointer;
}

.cover img {
    display: block;
    width: 100%;
    height: 0%;
    object-fit: cover;
    opacity: 0;
    
    animation: rotateAlbumCover 3s linear infinite;
    animation-play-state: paused;
}

.cover img.active {
    animation-play-state: running;
    
}



@keyframes rotateAlbumCover {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}